{% extends '::base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/jquery.multi-select.js') }}"></script>
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/jquery.validate.js') }}"></script>
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/ext-all.js') }}"></script>
    <script type="text/javascript">
        var treeplaceholder="treeplaceholder";
        var inputboxname="hris_recordsbundle_validationtype[organisationunit]";
        var organisationunitLevelsTagId = "#hris_recordsbundle_validationtype_organisationunitLevel";
        var organisationunitLevelsSubmitTagId = "#hris_recordsbundle_validationtype_submit";
        var organisationunitTreeUrl='{{ path('organisationunit_tree', {'_format':'json'}) }}';
        var levelsUrl = '{{ path('organisationunit_levels',{'_format':'json'}) }}';
        function updateOrganisationunitLevels() {
            postData={'organisationunitid': $('input[name="'+inputboxname+'"]').val() };
            $.post(levelsUrl,postData , function( organisationunitLevels ){
                $(organisationunitLevelsTagId).find('option').remove();
                if (jQuery.isEmptyObject(organisationunitLevels)){
                    $(organisationunitLevelsTagId).attr('disabled', 'true');
                }else {
                    $(organisationunitLevelsTagId).removeAttr('disabled');
                    $.each(organisationunitLevels, function(organisationunitLevelIndex, organisationunitLevel) {
                        $(organisationunitLevelsTagId).append(new Option(organisationunitLevel['name'], organisationunitLevel['id']));
                    });
                }
            });
        }
        Ext.define('OrganisationUnitTreeModel2', {
            extend: 'Ext.data.Model',
            idProperty: 'id',
            fields: [{name: 'longname',type: 'string'},{name: 'id',type: 'int'},{ name: 'cls',type: 'string'},{name: 'leaf', type: 'boolean'}],
            validations: [{type: 'exclusion', field: 'cls',list: ['file','folder']}]
        });
        Ext.onReady(function(){
            var OrganisationUnitTreeStore2 = Ext.create('Ext.data.TreeStore', {
                storeId: 'MyJsonOrganisationUnitTreeStore2',
                model: 'OrganisationUnitTreeModel2',
                proxy: {
                    type: 'ajax',
                    url: organisationunitTreeUrl,
                    reader: { type: 'json', root: 'organisationUnits'}
                },
                nodeParam: 'id',
                root: {longname: 'Orgunits', id: 'src', expanded: true},
                folderSort: true,
                sorters: [{property: 'longname', direction: 'ASC'}]
            });
            var OrganisationUnitTreePanel2 = Ext.create('Ext.tree.Panel', {
                id: 'organisationUnitTreePanel2',
                store: OrganisationUnitTreeStore2,
                displayField: 'longname',
                rootVisible: false,
                singleExpand: false,
                height: 250,
                viewConfig: {},
                renderTo: treeplaceholder,
                listeners: {
                    select: function(selModel2, record, index, options) {
                        var selectedOrgunits2 = selModel2.getSelection();
                        var selectedId2 = selectedOrgunits2[0].get('id');
                        $('input[name="'+inputboxname+'"]').val(selectedId2);
                        updateOrganisationunitLevels();
                    }
                }

            });
        });
        $( document ).ready(function() {
            // validate signup form on keyup and submit
            $("#validationRunForm").validate({ ignore:[] });
            $('#hris_recordsbundle_validationtype_validations').multiSelect({
                selectableHeader: "<div class=''>Avaiable Validations</div>",
                selectionHeader: "<div class=''>Selected Validations</div>"
            });
            $('#hris_recordsbundle_validationtype_forms').multiSelect({
                selectableHeader: "<div class=''>Avaiable Forms</div>",
                selectionHeader: "<div class=''>Selected Forms</div>"
            });
            $( 'input[required="required"],select[required="required"]').closest(".control-group").children("label").prepend('<em class="required-asterisk">*</em>');
        });
    </script>
{% endblock javascripts %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/ext-standard.css') }}">
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/multi-select.css') }}">
{% endblock stylesheets %}

{% block right_content -%}
    <h1><small>Run Validation</small></h1>
        {{ form_start(validationRunForm, {'action': path('validation_result'), 'method': 'POST','attr': {'class':'validationRunForm form-horizontal','id':'validationRunForm'} }) }}
    <div class="control-group">
        {{ form_label( validationRunForm.organisationunit,'Select Organisationunit', {'label_attr': {'class': 'control-label'} } ) }}
        <div class="controls">
            <div id="treeplaceholder"></div>
            {{ form_errors( validationRunForm.organisationunit ) }}
            {{ form_widget( validationRunForm.organisationunit ) }}
        </div>
    </div>
    <br/>
    <div class="control-group">
        {{ form_label( validationRunForm.withLowerLevels,'Use data for selected unit with lower level', {'label_attr': {'class': 'control-label'} } ) }}
        <div class="controls">
            {{ form_errors( validationRunForm.withLowerLevels ) }}
            {{ form_widget( validationRunForm.withLowerLevels ) }}
        </div>
    </div>
    <div class="control-group">
        {{ form_label( validationRunForm.validations,'Select Validations', {'label_attr': {'class': 'control-label'} } ) }}
        <div class="controls">
            {{ form_errors( validationRunForm.validations ) }}
            {{ form_widget( validationRunForm.validations ) }}
        </div>
    </div>
    <div class="control-group">
        {{ form_label( validationRunForm.forms,'Select Forms', {'label_attr': {'class': 'control-label'} } ) }}
        <div class="controls">
            {{ form_errors( validationRunForm.forms ) }}
            {{ form_widget( validationRunForm.forms ) }}
        </div>
    </div>

    {{ form_end(validationRunForm) }}


{% endblock %}
